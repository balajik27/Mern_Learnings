
TICTACTOE

0. square box ui.
1. squares are repetative , so creating square component.
2. when u click the square it should change x.
3. when u click the square it should change x and o.
4. when i click the x or o again it should not change to x or o.
5. calculateWinner and dont allow to enter x or o after the click.

STEP 1: 

import { useState } from "react";

function Square() {
  const [value, setValue] = useState("");

  function handleInput() {
    setValue("X");
  }
  return (
    <div className="square" onClick={handleInput}>
      {value}
    </div>
  );
}

function TicTacToe() {
  return (
    <>
      <div className="board-box">
        <Square />
        <Square />
        <Square />
      </div>
      <div className="board-box">
        <Square />
        <Square />
        <Square />
      </div>
      <div className="board-box">
        <Square />
        <Square />
        <Square />
      </div>
    </>
  );
}

export default TicTacToe;


STEP 2:

import { useState } from "react";

function Square({handleInput , value}) {
  return (
    <div className="square" onClick={handleInput}>
      {value}
    </div>
  );
}

function TicTacToe() {

    const [xIsnext , setxIsnext] = useState(true);
    const [value, setValue] = useState("");
    function handleInput() {
        if(xIsnext){
            setValue("X");
        } else {
            setValue("O");
        }
        setxIsnext(!xIsnext);
    }

  return (
    <>
      <div className="board-box">
        <Square handleInput={handleInput} value = {value} />
        <Square handleInput={handleInput} value = {value} />
        <Square handleInput={handleInput} value = {value} />
      </div>
      <div className="board-box">
        <Square handleInput={handleInput} value = {value} />
        <Square handleInput={handleInput} value = {value} />
        <Square handleInput={handleInput} value = {value} />
      </div>
      <div className="board-box">
        <Square handleInput={handleInput} value = {value} />
        <Square handleInput={handleInput} value = {value} />
        <Square handleInput={handleInput} value = {value} />
      </div>
     
      
    </>
  );
}

export default TicTacToe;



here when i click box i gives x to all the boxes , but i want x and o when i click any box.
so we created array and stores the x or o value for each box.

STEP 3:

import { useState } from "react";

function Square({handleInput , value}) {
  return (
    <div className="square" onClick={handleInput}>
      {value}
    </div>
  );
}

function TicTacToe() {

    const [xIsnext , setxIsnext] = useState(true);
    const [value, setValue] = useState(Array(9).fill(null));
    function handleInput(index) {
        const copyArray = [...value];
        copyArray[index] 
        if(xIsnext){
            copyArray[index] = 'X';
        } else {
            copyArray[index] = 'O';
        }
        setValue(copyArray);
        setxIsnext(!xIsnext);
    }

  return (
    <>
      <div className="board-box">
        <Square handleInput={()=>handleInput(0)} value = {value[0]} />
        <Square handleInput={()=>handleInput(1)} value = {value[1]} />
        <Square handleInput={()=>handleInput(2)} value = {value[2]} />
      </div>
      <div className="board-box">
        <Square handleInput={()=>handleInput(3)} value = {value[3]} />
        <Square handleInput={()=>handleInput(4)} value = {value[4]} />
        <Square handleInput={()=>handleInput(5)} value = {value[5]} />
      </div>
      <div className="board-box">
        <Square handleInput={()=>handleInput(6)} value = {value[6]} />
        <Square handleInput={()=>handleInput(7)} value = {value[7]} />
        <Square handleInput={()=>handleInput(8)} value = {value[8]} />
      </div>
    </>
  );
}

export default TicTacToe;

now when i click x again it changes to o , so i added this to handleInput

 if(copyArray[index]){
    return;
}

STEP 4:

import { useState } from "react";

function Square({handleInput , value}) {
  return (
    <div className="square" onClick={handleInput}>
      {value}
    </div>
  );
}

function calculateWinner(value){
    const lines = [
        [0, 1, 2],
        [3 ,4, 5],
        [6 ,7 , 8],
        [0 , 4 , 8],
        [2 , 4 , 6],
        [0 , 3 , 6],
        [1 , 4 , 7],
        [2 , 5 , 8]
    ]

    for(let i=0;i<lines.length;i++){
        const [a,b,c] = lines[i];
        if(value[a] && value[a] === value[b] && value[b] === value[c]){
            return value[a];
        }
    }
    return null;
}

function TicTacToe() {

    const [xIsnext , setxIsnext] = useState(true);
    const [value, setValue] = useState(Array(9).fill(null));
    function handleInput(index) {
        const copyArray = [...value];
        if(copyArray[index] || calculateWinner(value)){
            return;
        }
        if(xIsnext){
            copyArray[index] = 'X';
        } else {
            copyArray[index] = 'O';
        }
        setValue(copyArray);
        setxIsnext(!xIsnext);
    }

  return (
    <>
      <div className="board-box">
        <Square handleInput={()=>handleInput(0)} value = {value[0]} />
        <Square handleInput={()=>handleInput(1)} value = {value[1]} />
        <Square handleInput={()=>handleInput(2)} value = {value[2]} />
      </div>
      <div className="board-box">
        <Square handleInput={()=>handleInput(3)} value = {value[3]} />
        <Square handleInput={()=>handleInput(4)} value = {value[4]} />
        <Square handleInput={()=>handleInput(5)} value = {value[5]} />
      </div>
      <div className="board-box">
        <Square handleInput={()=>handleInput(6)} value = {value[6]} />
        <Square handleInput={()=>handleInput(7)} value = {value[7]} />
        <Square handleInput={()=>handleInput(8)} value = {value[8]} />
      </div>
    </>
  );
}

export default TicTacToe;


added calculateWinner and stops when u win.

now we want to print the winner or the next move.

let winner = calculateWinner(value);

if(winner){
    winner = winner + " is the Winner";
} else {
    winner = (xIsnext? 'X' : 'O') + " is next move";
}

<p>{winner}</p>

STEP 5:

now we want to store the history and move to that

